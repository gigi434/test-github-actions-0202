name: Continue Website Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      # キャッシュミスしている＝依存関係が少しでも変わっているならCiを実行して依存関係にあるライブラリを再度インストールする
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: app/007_control_workflow/end
      - name: Lint code
        run: npm run lint
        working-directory: app/007_control_workflow/end
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: app/007_control_workflow/end
      - name: Test code
        continue-on-error: true
        id: run-tests
        run: npm run test
        working-directory: app/007_control_workflow/end
      - name: Upload test report
        # ifを使用してある条件下における動作を決めることができる。下はテストの結果が失敗のときにJSONファイルを生成するもの
        # outcomeであればステップの実行に失敗した場合でも失敗のままであるし、conclusionであれば成功になる
        # 状態を確認する関数を用いて失敗したときにという複合条件にすることで、前段階で失敗してもスキップされなくする
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: ./app/007_control_workflow/end/test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        working-directory: app/007_control_workflow/end
      - name: Build website
        id: build-website
        run: npm run build
        working-directory: app/007_control_workflow/end
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: app/007_control_workflow/end/dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: app/007_control_workflow/end/dist
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deploying..."
  report:
    needs: [lint, deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{ toJson(github) }}"